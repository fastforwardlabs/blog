<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>realtime data on Blog</title>
    <link>https://blog.fastforwardlabs.com/tags/realtime-data.html</link>
    <description>Recent content in realtime data on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Nov 2016 18:36:58 +0000</lastBuildDate>
    
    <atom:link href="https://blog.fastforwardlabs.com/tags/realtime-data/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Probabilistic Data Structure Showdown: Cuckoo Filters vs. Bloom Filters</title>
       
      <link>https://blog.fastforwardlabs.com/2016/11/23/probabilistic-data-structure-showdown-cuckoo-filters-vs.-bloom-filters.html</link>
      
      <pubDate>Wed, 23 Nov 2016 18:36:58 +0000</pubDate>
      
      <guid>https://blog.fastforwardlabs.com/2016/11/23/probabilistic-data-structure-showdown-cuckoo-filters-vs.-bloom-filters.html</guid>
      <description>Probabilistic data structures store data compactly with low memory and provide approximate answers to queries about stored data. They are designed to answer queries in a space-efficient manner, which can mean sacrificing accuracy. However, they typically provide guarantees and bounds on error rates depending on specifications of the data structure in question. Because they provide low memory footprints, probabilisitic data structures are particularly useful ink streaming and low power settings.</description>
      <imglink>/tumblr_files/pmrs-test.png</imglink>
    </item>
    
  </channel>
</rss>
